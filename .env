# Image bits
IMAGE_TAG=iac-dev:latest
BASE_IMAGE=debian:bookworm-slim
EXTRA_APT="build-essential unzip"

# Auth & secrets
# optional: export GITHUB_TOKEN in your shell; we forward SSH agent automatically if present
SECRETS_DIR="$HOME/.dev-secrets"   # mount read-only to /secrets if it exists

# What to pull on startup (comma-separated)
GIT_REPOS="git@github.com:bottah/fluxforge.git#main,git@github.com:bottah/dotfiles.git#main"
GIT_DEPTH=1

# Dotfiles import
DOTFILES_REPO="git@github.com:bottah/dotfiles.git"
DOTFILES_REF="main"              # branch/tag/commit; optional
DOTFILES_METHOD=stow             # "copy" or "stow" (requires your repo to be stow-ready)
DOTFILES_PACKAGES="tmux nvim shell"  # used only if DOTFILES_METHOD=stow
DOTFILES_STOW_FLAGS=              # e.g. "--verbose" or "--adopt" (not needed here)

# Runtime niceties
TMUX_SESSION=dev
DEBUG_COMMAND="python3 -m http.server 8000"

# Auth mode hint (tooling still auto-detects)
GIT_AUTH_MODE=ssh          # ssh | https

# For HTTPS helper (used only if cloning via https://)
GIT_USERNAME=oauth2
GITHUB_TOKEN=               # optional; if set, used non-interactively
GITLAB_TOKEN=
BITBUCKET_USERNAME=
BITBUCKET_APP_PASSWORD=

# Pin Neovim version
NVIM_VERSION=0.10.2

# Optional: choose how to install
NVIM_INSTALL_METHOD=appimage   # appimage | bob


# If you want bootstrap to install Codex (instead of baking it in):
# pick the correct tarball URL for your arch and version
# CODEX_URL=https://github.com/openai/codex/releases/download/v0.28.0/codex-x86_64-unknown-linux-musl.tar.gz

# Provide the key non-interactively
OPENAI_API_KEY=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

# Optional: control whether a tmux window appears (bootstrap checks the binary anyway)
START_CODEX_WINDOW=true

